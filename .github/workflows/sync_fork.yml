name: Sync Upstream and Create PR

on:
  workflow_dispatch: # 수동으로도 실행 가능하게 설정

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout Fork
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "minchodang"
          git config user.email "minsu910725@gmail.com"

      - name: Fetch Upstream
        run: |
          git remote add upstream https://github.com/kode-krew/meta-test-be.git
          git fetch upstream
          git fetch origin

      - name: Check for Changes
        id: changes
        run: |
          git diff origin/main upstream/main -- . ':(exclude).github/workflows/sync-upstream.yml' > diff.txt
          DIFF_HASH=$(sha256sum diff.txt | cut -d ' ' -f 1)
          echo "diff_hash=$DIFF_HASH" >> $GITHUB_ENV

      - name: Check for Existing PR with Same Changes
        id: pr_exists
        if: steps.changes.outputs.changes == 'true'
        run: |
          EXISTING_PR=$(gh pr list --repo ${{ github.repository }} --json number --jq '.[] | select(.state=="open") | .number')
          for pr in $EXISTING_PR; do
            gh pr checkout $pr
            git diff origin/main -- . ':(exclude).github/workflows/sync-upstream.yml' > existing_diff.txt
            EXISTING_DIFF_HASH=$(sha256sum existing_diff.txt | cut -d ' ' -f 1)
            if [ "$EXISTING_DIFF_HASH" == "$DIFF_HASH" ]; then
              echo "pr_exists=true" >> $GITHUB_OUTPUT
              break
            fi
          done
          if [ ! -f $GITHUB_OUTPUT ]; then
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Branch and Merge Changes
        if: steps.pr_exists.outputs.pr_exists == 'false'
        run: |
          BRANCH_NAME=sync-upstream-$(date +%Y%m%d%H%M%S)
          git checkout -b $BRANCH_NAME origin/main
          git merge upstream/main --no-edit || true
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        if: steps.pr_exists.outputs.pr_exists == 'false'
        run: |
          BRANCH_NAME=sync-upstream-$(date +%Y%m%d%H%M%S)
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{
              "title": "Sync with upstream",
              "body": "This PR syncs the fork with upstream repository",
              "head": "'"$BRANCH_NAME"'",
              "base": "main"
            }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
